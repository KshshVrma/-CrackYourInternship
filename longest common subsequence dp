    int f(string &t,string &s,int i,int j,vector<vector<int>>&dp){
        if(i<0||j<0){
            return 0;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        if(t[i]==s[j]){
            return  dp[i][j]=1+f(t,s,i-1,j-1,dp);
        }
        return dp[i][j]=max(f(t,s,i-1,j,dp),f(t,s,i,j-1,dp));
}
    int longestCommonSubsequence(string text1, string text2) {
        vector<vector<int>>ans(text1.length(),vector(text2.length(),-1));
        return f(text1,text2,text1.length()-1,text2.length()-1,ans);
    }
